# ---------------------------------------------------------------------------------------------------------------
# SOLUTION BUILD CONTROL | BOOLEAN MAP THAT CONTROLS THE TYPE OF VPC TO DEPLOY
# ---------------------------------------------------------------------------------------------------------------
# Add true besides the solution you would like to deploy.
#   1. Adding true for shared_services_vpc to deploy a shared services VPC
#   2. Adding true for spoke_vpc deploys a spoke VPC
#   3. Adding true for pave_networking_components_for_spoke_n_shared_services_integration to deploy
#      the eventbus and lambda functions that makes it possible for spoke VPCs to associate with
#      centralized resources inside the shared services VPC or security services VPC.
# ---------------------------------------------------------------------------------------------------------------

# ---------------------------------------------------------------------------------------------------------------
######### MUST BE CONFIGURED ##############
# ---------------------------------------------------------------------------------------------------------------
which_vpc_type_are_you_creating={
    shared_services_vpc     = false    # Specify true or false
    spoke_vpc               = true     # Specify true or false
    pave_account_with_eventbus_n_lambda_fn_for_network_task_orchestration  = false    # Specify true or fals
}

# ---------------------------------------------------------------------------------------------------------------
#  AWS TRANSIT GATEWAY IDENTIFIERS | TRANSIT GATEWAY & TRANSIT GATEWAY ROUTE TABLES
# ---------------------------------------------------------------------------------------------------------------
transit_gateway_id                            = "tgw-0e5030b56ec68c3dc"
transit_gateway_dev_route_table               = "tgw-rtb-0a569b29ac7fcf3cb"
transit_gateway_uat_route_table               = "tgw-rtb-0413d44e2f4ae6197"
transit_gateway_shared_svc_route_table        = "tgw-rtb-0e404319362ea89bf"
transit_gateway_packet_inspection_route_table = "tgw-rtb-049ffb744c8dcb375"
transit_gateway_prod_route_table              = "tgw-rtb-035d1e4a9856b5b88"

# ---------------------------------------------------------------------------------------------------------------
#  SHARED SERVICES IDENTIFIERS | TRANSIT GATEWAY & TRANSIT GATEWAY ROUTE TABLES
# ---------------------------------------------------------------------------------------------------------------
shared_services_vpc_id                                            = "vpc-0ce10ea50ab2df5d2"
shared-services-vpc-network-operations-put-event-lambda-fn-name   = "fsf-network-event-writer_6827bee4-5918-0f9b-d413-650d32a7f2a8"
shared_services_network_operations_eventbus_arn                   = "arn:aws:events:us-west-2:900095077793:event-bus/aws-fsf-network-operations-event-bus-563a8eba-b4d7-856a-a8a2-b048e6696a27"


# ---------------------------------------------------------------------------------------------------------------
#  SPOKE IDENTIFIERS | TRANSIT GATEWAY & TRANSIT GATEWAY ROUTE TABLES
# ---------------------------------------------------------------------------------------------------------------
spoke-vpc-network-operations-put-event-lambda-fn-name             = "arn:aws:lambda:us-west-2:505649211197:function:fsf-network-event-writer_f9449f90-1eec-f0e5-70bb-1aeb6d8a48a4"
spoke_vpc_network_operations_eventbus_arn                         = "arn:aws:events:us-west-2:505649211197:event-bus/aws-fsf-network-operations-event-bus-97845772-9ee9-31d7-e8f4-c17998ed241c"

# ---------------------------------------------------------------------------------------------------------------
# Transit Gateway Association Task Map
# ---------------------------------------------------------------------------------------------------------------
######### MUST BE CONFIGURED ##############
transit_gateway_association_instructions= {
    create_transit_gateway_association                        = true   # Specify true or false | Associates VPC with AWS Transit Gateway
    access_shared_services_vpc                                = true   # Specify true or false | Propagates VPC routes to Shared Services Route Table
    perform_east_west_packet_inspection                       = false   # Specify true or false | Propagates VPC routes to Packet Inspection Route Table for North-South Packet Inspection
    allow_onprem_access_to_entire_vpc_cidr_range              = false   # Specify true or false | Propagate Routes to On-premises Route Table
    allow_onprem_access_to_externally_routable_vpc_cidr_range = false   # Specify true or false | Propagate Routes to On-premises Route Table
}


# ---------------------------------------------------------------------------------------------------------------
# AWS VPC SECURITY GROUP | Decision Map | Adding true creates the security that you want
# ---------------------------------------------------------------------------------------------------------------
#   ####### Only enable the security that is needed
# ---------------------------------------------------------------------------------------------------------------
######### MUST BE CONFIGURED ##############
security_grp_traffic_pattern = {
    database                = true  # Specify true or false
    web                     = true  # Specify true or false
    kafka_zookeeper         = false # Specify true or false
    elasticsearch           = false # Specify true or false
    apache_spark            = false # Specify true or false
}

# ---------------------------------------------------------------------------------------------------------------
# VPC ENDPOINTS
# ---------------------------------------------------------------------------------------------------------------
# VPC Endpoint Boolean Map
# ---------------------------------------------------------------------------------------------------------------
######### MUST BE CONFIGURED IF YOU ARE DEPLOYING A STAND ALONE SPOKE VPC. ##############
#########        DO NOT CONFIGURE IF DEPLOYING A SHARED SERVICES VPC     ##############
# ---------------------------------------------------------------------------------------------------------------
endpoints = {
    s3_gateway          = true  # Specify true or false
    dynamodb            = true  # Specify true or false
    secrets_manager     = false # Specify true or false
    kms                 = false # Specify true or false
    ec2                 = false # Specify true or false
    ec2_messages        = false # Specify true or false
    ecs                 = false # Specify true or false
    ecs_agent           = false # Specify true or false
    ecs_telemetry       = false # Specify true or false
    sts                 = false # Specify true or false
    sns                 = false # Specify true or false
    sqs                 = false # Specify true or false
    ssm                 = false # Specify true or false
    ssm_messages        = false # Specify true or false
}

# ---------------------------------------------------------------------------------------------------------------
# Route 53 Private Hosted Zone |
# Controls whether a private hosted zone is created or not. It also controls the creation of route 53 resolver rules.
# ---------------------------------------------------------------------------------------------------------------
######### MUST BE CONFIGURED ##############
route53_acts = {
    create_standalone_private_hosted_zone                                       = false  # Specify true or false
    create_private_hosted_zone_that_integrates_with_shared_services_or_dns_vpc  = true   # Specify true or false
    associate_with_dns_vpc_or_a_shared_services_vpc                             = true  # Specify true or false
    associate_with_private_hosted_zone_with_centralized_dns_solution            = true  # Specify true or false
    create_forwarding_rule_for_sub_domain                                       = true # Specify true or false
    create_forwarding_rule_for_domain                                           = true # Specify true or false
    share_forwarding_rule_with_aws_organization                                 = true # Specify true or false
}

route_53_resolver_firewall_actions                                              = { resolver_firewall_resource_share_exists = true }
route_53_resolver_firewall_group                                                = "rslvr-frg-39282a6e99ef4f70"
route_53_resolver_firewall_rule_group_association_priority                      = 110 # please add a number between 100 &
route_53_resolver_firewall_rule_group_association_name                          = "central_resolver_firewall_group"

igw_decisions                                                                   = {
                                                                                    ipv4_internet_gateway = false
                                                                                    ipv6_internet_gateway = false
                                                                                    }

# ---------------------------------------------------------------------------------------------------------------
##################################################### Centralized NAT Variables ######################################################
# ---------------------------------------------------------------------------------------------------------------
byoip_id = ""

nat_decisions = {
        byoip                   = false
        create_eip              = false
        create_nat_gateway      = false
}

nat_gateway_connectivity_type= {
        public  = false
        private = false
}

number_of_azs_to_deploy_to = 2

create_private_nat_gateway = false

create_public_nat_gateway  = false

# ---------------------------------------------------------------------------------------------------------------
# AWS REGION | REGION CODE MAPPED TO REGION NAME
# ---------------------------------------------------------------------------------------------------------------
aws_region={
    n_virginia        = "us-east-1"
    ohio              = "us-east-2"
    n_california      = "us-west-1"
    oregon            = "us-west-2"
    canada_montreal   = "ca-central-1"
    ireland           = "eu-west-1"
    london            = "eu-west-2"
    paris             = "eu-west-3"
    south_africa      = "af-south-1"
    hong_kong         = "ap-east-1"
    mumbai            = "ap-south-1"
    osaka_local       = "ap-northeast-3"
    seoul             = "ap-northeast-2"
    singapore         = "ap-southeast-1"
    sydney            = "ap-southeast-2"
    tokyo             = "ap-northeast-1"
    frankfurt         = "eu-central-1"
    milan             = "eu-south-1"
    paris             = "eu-west-3"
    stockholm         = "eu-north-1"
    middle_east       = "me-south-1"
    sao_paulo         = "sa-east-1"
}


rule_type = "FORWARD"

# ---------------------------------------------------------------------------------------------------------------
#  Controls Resource Deployment for VPC TYPES
# ---------------------------------------------------------------------------------------------------------------

# VPC TYPE
# ---------------------------------------------------------------------------------------------------------------
vpc_type={
    spoke_vpc               = true  # Specify true or false
    shared_services         = false # Specify true or false
}


vpc_type_string ={
    spoke-vpc               = "spoke-vpc"
    shared-services         = "shared-services-vpc"
}

vpc_env_type = "fsf"


# Decision to make associate with centralized Route53 Private Hosted Zone
# ---------------------------------------------------------------------------------------------------------------
is_centralize_interface_endpoints_available = {
    is_centralized_interface_endpoints          = true # Specify true or false
    associate_with_private_hosted_zones         = true # Specify true or false
}

attach_to_centralize_dns_solution               = true # Specify true or false


# ---------------------------------------------------------------------------------------------------------------
################################################## VPC VARIABLES ################################################
# ---------------------------------------------------------------------------------------------------------------

# VPC Tenancy Bool. There are two tenancy type [default, dedicated]
# ---------------------------------------------------------------------------------------------------------------
instance_tenancy = "default"

# DNS_Support Bool Variable. This is used in the DHCP Option Set for the VPC
# ---------------------------------------------------------------------------------------------------------------
dns_support = true


# DNS_Hostname Bool Variable. This is used in the DHCP Option Set for the VPC
# ---------------------------------------------------------------------------------------------------------------
dns_host_names = true

# Primary VPC CIDR range that is allocated to the spoke VPC
# ---------------------------------------------------------------------------------------------------------------
vpc_cidr_block = "100.65.0.0/16"

# Enable an AWS provided /56 IPv6 CIDR Block with /64 Subnet Ranges
# ---------------------------------------------------------------------------------------------------------------
enable_aws_ipv6_cidr_block = false

# VPC Flow enablement bool
# ---------------------------------------------------------------------------------------------------------------
enable_vpc_flow_logs = true

# ---------------------------------------------------------------------------------------------------------------
############################################### DHCP MODULE VARIBLES ############################################
# ---------------------------------------------------------------------------------------------------------------

# Amazon VPC DHCP Option Map: This map allows you to enable the type of DHCP Options to create and associate
# ---------------------------------------------------------------------------------------------------------------
create_dhcp_options= {
    dhcp_options        = true # Specify true or false
    custom_dhcp_options = false # Specify true or false
}

# Custom DHCP Options configuration parameters.
# ---------------------------------------------------------------------------------------------------------------
# (Optional) the suffix domain name to use by default when resolving non Fully Qualified Domain Names.
# In other words, this is what ends up being the search value in the /etc/resolv.conf file.
# Domain for Amazon Provided DNS
custom_domain_name     = "example.com"
domain_name_servers    = ["127.0.0.1", "10.0.0.2"]
ntp_servers            = ["127.0.0.1"]
netbios_name_servers   = ["127.0.0.1"]
netbios_node_type      = 2

private_hosted_zone_name  =  ["anaconda.aws-fsf-corp.com"]

# ---------------------------------------------------------------------------------------------------------------
########################################### SUBNET MODULE VARIABLES #############################################
# ---------------------------------------------------------------------------------------------------------------

# Private Subnet Declaration
# ---------------------------------------------------------------------------------------------------------------
subnet_type = {
    aws_routable                      = true # Specify true or false
    externally_routable               = true # Specify true or false
    transit_gateway_subnet            = true # Specify true or false
}



# ---------------------------------------------------------------------------------------------------------------
# Map of port and security group attributes required for the creations of the Amazon VPC Security Group
# ---------------------------------------------------------------------------------------------------------------
private_subnets = [
    "100.65.1.0/24",
    "100.65.2.0/24",
    "100.65.3.0/24"
]

# ---------------------------------------------------------------------------------------------------------------
# Map of port and security group attributes required for the creations of the Amazon VPC Security Group
# ---------------------------------------------------------------------------------------------------------------
public_subnets = [
    "100.65.8.0/24",
    "100.65.9.0/24",
    "100.65.10.0/24"
]

# ---------------------------------------------------------------------------------------------------------------
# Transit Gateway Attachment Subnet
# ---------------------------------------------------------------------------------------------------------------
transit_gateway_subnets = [
    "100.65.0.0/28",
    "100.65.0.16/28",
    "100.65.0.32/28"
]

# ---------------------------------------------------------------------------------------------------------------
# Module: AWS-FSF-ADD-ROUTE
# ---------------------------------------------------------------------------------------------------------------

# Bool Map that controls the addition of routes with the AWS Transit Gateway as the next hop infrastructure
# ---------------------------------------------------------------------------------------------------------------
route_table = {
    aws_routable_table          = true  # Specify true or false
    tgw_table                   = true # Specify true or false
    external_table              = true  # Specify true or false
}


next_hop_infra = {
    tgw   = true
}

additional_route_deployment_configuration               = true
tgw_subnet_route_destination_for_private_nat_deployment = ["10.254.0.0/16"]
add_igw_route_to_externally_routable_route_tables       = true

# TGW Destination CIDR Block
# ---------------------------------------------------------------------------------------------------------------
tgw_aws_route_destination       = ["0.0.0.0/0"]
tgw_external_route_destination  = ["10.0.0.0/8", "172.16.0.0/12", "192.168.0.0/16", "100.64.0.0/12"] # ["0.0.0.0/0"]



# Not used in this module
# ---------------------------------------------------------------------------------------------------------------
tgw_route_destination = ["0.0.0.0/0"]

# Decision to create AWS Route 53 Private Hosted Zones
# ---------------------------------------------------------------------------------------------------------------
create_private_hosted_zones_for_endpoints = false

# Enable Private DNS
# ---------------------------------------------------------------------------------------------------------------
enable_private_dns = false

# ---------------------------------------------------------------------------------------------------------------
# VPC SECURITY GROUPS
# ---------------------------------------------------------------------------------------------------------------

# On-premises IP Range to be added to the spoke VPC security group
# ---------------------------------------------------------------------------------------------------------------
on_premises_cidrs = [ "172.16.0.0/12" ]


firewall_fail_open                                                = "DISABLED"
domain_list_name                                                  = "aws-fsf-resolver-fire-wall-domain-list"
firewall_rule_group                                               = "aws-fsf-resolver-fire-wall-rule-group"
route_53_resolver_firewall_rule_name                              = "aws-fsf-resolver-fire-wall-rule"
route_53_resolver_firewall_rule_block_override_dns_type           = "CNAME"       # Required if block_response is OVERRIDE
route_53_resolver_firewall_rule_block_override_domain             = "xyz.com"     # Required if block_response is OVERRIDE
route_53_resolver_firewall_rule_block_override_ttl                = 600           # Required if block_response is OVERRIDE
route_53_resolver_firewall_rule_block_response                    = "OVERRIDE"    # Required if action is BLOCK
firewall_rule_group_association_priority                          = 101           # Required - Provide a num <> "100" and "9900"
firewall_rule_group_association_name                              = "aws-fsf-resolver-fire-wall-rule-group-association"
# --------------------------------------------------------------------------------------------------------------------
# Resolver DNS Firewall | Orchestration Object
# --------------------------------------------------------------------------------------------------------------------
domain_list                                                       = { allow = ["abc.com"]
                                                                      deny  = ["facebook.com"]
                                                                      alert = ["xyz.com"] }

action_type                                                       = { allow   = true
                                                                      deny    = true
                                                                      alert   = true }

ram_actions                                                       = { create_resource_share = true }

route_53_resolver_firewall_rule_priority                          = { allow = 0
                                                                      deny  = 1
                                                                      alert = 2 }

# ---------------------------------------------------------------------------------------------------------------
##################################################### TAGS ######################################################
# ---------------------------------------------------------------------------------------------------------------
####### MUST CONFIGURE #######
# Variables that makes up the AWS Tags assigned to the VPC on creation.
# ---------------------------------------------------------------------------------------------------------------
Application_ID    = "please_add_this_info"

Application_Name  = "please_add_this_info"

Business_Unit     = "please_add_this_info"

Environment_Type  = "DEV"

CostCenterCode    = "CB_0000000"

CreatedBy         = "Androski_Spicer"

Manager           = "please_add_this_info"